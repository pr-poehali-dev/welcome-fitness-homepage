import React, { useState } from "react";
import GymHeader from "@/components/GymHeader";
import WorkoutDay from "@/components/WorkoutDay";
import RestTimer from "@/components/RestTimer";
import Icon from "@/components/ui/icon";

interface Exercise {
  id: number;
  name: string;
  sets: number;
  weight?: number;
  reps: number;
  completed: boolean;
  description?: string;
  videoUrl?: string;
}

const Gym = () => {
  const [currentDay, setCurrentDay] = useState(1);
  const [workoutNumber, setWorkoutNumber] = useState(15);
  const [biceps, setBiceps] = useState(38);
  const userName = "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä";

  const workoutDays = [
    {
      day: 1,
      name: "–î–µ–Ω—å 1 - –ì—Ä—É–¥—å –∏ —Ç—Ä–∏—Ü–µ–ø—Å",
      exercises: [
        {
          id: 1,
          name: "–ñ–∏–º –ª—ë–∂–∞",
          sets: 3,
          weight: 80,
          reps: 0,
          completed: false,
          description: "–ë–∞–∑–æ–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –≥—Ä—É–¥–Ω—ã—Ö –º—ã—à—Ü",
        },
        {
          id: 2,
          name: "–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö",
          sets: 3,
          reps: 0,
          completed: false,
          videoUrl: "https://youtube.com/watch?v=example",
        },
        {
          id: 3,
          name: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π –∂–∏–º",
          sets: 3,
          weight: 30,
          reps: 0,
          completed: false,
        },
        {
          id: 4,
          name: "–†–∞–∑–≤–µ–¥–µ–Ω–∏–µ –≥–∞–Ω—Ç–µ–ª–µ–π",
          sets: 3,
          weight: 15,
          reps: 0,
          completed: false,
        },
      ],
    },
    {
      day: 2,
      name: "–î–µ–Ω—å 2 - –°–ø–∏–Ω–∞ –∏ –±–∏—Ü–µ–ø—Å",
      exercises: [
        { id: 5, name: "–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è", sets: 3, reps: 0, completed: false },
        {
          id: 6,
          name: "–¢—è–≥–∞ —à—Ç–∞–Ω–≥–∏",
          sets: 3,
          weight: 70,
          reps: 0,
          completed: false,
        },
        {
          id: 7,
          name: "–ü–æ–¥—ä—ë–º –Ω–∞ –±–∏—Ü–µ–ø—Å",
          sets: 3,
          weight: 20,
          reps: 0,
          completed: false,
        },
        {
          id: 8,
          name: "–ú–æ–ª–æ—Ç–æ–∫",
          sets: 3,
          weight: 12,
          reps: 0,
          completed: false,
        },
      ],
    },
    {
      day: 3,
      name: "–î–µ–Ω—å 3 - –ù–æ–≥–∏ –∏ –ø–ª–µ—á–∏",
      exercises: [
        {
          id: 9,
          name: "–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è",
          sets: 4,
          weight: 100,
          reps: 0,
          completed: false,
        },
        {
          id: 10,
          name: "–ñ–∏–º –Ω–æ–≥–∞–º–∏",
          sets: 3,
          weight: 150,
          reps: 0,
          completed: false,
        },
        {
          id: 11,
          name: "–ñ–∏–º –≥–∞–Ω—Ç–µ–ª–µ–π —Å–∏–¥—è",
          sets: 3,
          weight: 18,
          reps: 0,
          completed: false,
        },
        {
          id: 12,
          name: "–ü–æ–¥—ä—ë–º—ã –Ω–∞ –Ω–æ—Å–∫–∏",
          sets: 3,
          weight: 50,
          reps: 0,
          completed: false,
        },
      ],
    },
  ];

  const [days, setDays] = useState(workoutDays);

  const updateExercise = (
    dayIndex: number,
    exerciseId: number,
    updates: Partial<Exercise>,
  ) => {
    setDays((prev) =>
      prev.map((day, index) =>
        index === dayIndex
          ? {
              ...day,
              exercises: day.exercises.map((ex) =>
                ex.id === exerciseId ? { ...ex, ...updates } : ex,
              ),
            }
          : day,
      ),
    );
  };

  const isWorkoutComplete = (dayIndex: number) => {
    return days[dayIndex].exercises.every((ex) => ex.completed);
  };

  const completedExercises =
    days[currentDay - 1]?.exercises.filter((ex) => ex.completed).length || 0;
  const totalExercises = days[currentDay - 1]?.exercises.length || 0;

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-100">
      <GymHeader />

      <div className="container mx-auto px-4 py-6">
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {userName}! üí™
          </h1>
          <p className="text-lg text-gray-600">
            –í–∞—à–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–æ–º–µ—Ä{" "}
            <span className="font-semibold text-purple-600">
              {workoutNumber}
            </span>
          </p>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex gap-4 mb-8">
          <button className="flex items-center gap-2 px-6 py-3 bg-white rounded-lg shadow-md hover:shadow-lg transition-all hover:scale-105">
            <Icon name="History" size={20} />
            <span className="font-medium">–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</span>
          </button>
          <button className="flex items-center gap-2 px-6 py-3 bg-white rounded-lg shadow-md hover:shadow-lg transition-all hover:scale-105">
            <Icon name="Weight" size={20} />
            <span className="font-medium">–†–∞–±–æ—á–∏–µ –≤–µ—Å–∞</span>
          </button>
        </div>

        <div className="flex gap-6">
          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="flex-1">
            <div className="space-y-6">
              {days.map((day, index) => (
                <WorkoutDay
                  key={day.day}
                  day={day}
                  isActive={currentDay === day.day}
                  onUpdateExercise={(exerciseId, updates) =>
                    updateExercise(index, exerciseId, updates)
                  }
                  onStartWorkout={() => setCurrentDay(day.day)}
                  isComplete={isWorkoutComplete(index)}
                />
              ))}
            </div>
          </div>

          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="w-80 space-y-6">
            <RestTimer />

            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="bg-white rounded-xl p-6 shadow-lg">
              <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center gap-2">
                <Icon name="TrendingUp" size={24} />
                –ü—Ä–æ–≥—Ä–µ—Å—Å
              </h3>

              <div className="space-y-4">
                <div className="flex items-center justify-between p-4 bg-gradient-to-r from-purple-100 to-blue-100 rounded-lg">
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-purple-500 rounded-full flex items-center justify-center">
                      üí™
                    </div>
                    <span className="font-medium text-gray-700">–ë–∏—Ü–µ–ø—Å—ã</span>
                  </div>
                  <span className="text-2xl font-bold text-purple-600">
                    {biceps} —Å–º
                  </span>
                </div>

                <div className="bg-gray-50 rounded-lg p-4">
                  <div className="flex justify-between items-center mb-2">
                    <span className="text-sm text-gray-600">
                      –°–µ–≥–æ–¥–Ω—è –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                    </span>
                    <span className="text-sm font-medium">
                      {completedExercises}/{totalExercises}
                    </span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className="bg-gradient-to-r from-purple-500 to-blue-500 h-2 rounded-full transition-all duration-300"
                      style={{
                        width: `${(completedExercises / totalExercises) * 100}%`,
                      }}
                    />
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-3">
                  <div className="text-center p-3 bg-green-50 rounded-lg">
                    <div className="text-2xl font-bold text-green-600">24</div>
                    <div className="text-xs text-gray-600">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
                  </div>
                  <div className="text-center p-3 bg-blue-50 rounded-lg">
                    <div className="text-2xl font-bold text-blue-600">2.5</div>
                    <div className="text-xs text-gray-600">–ß–∞—Å–∞ —Å–µ–≥–æ–¥–Ω—è</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Gym;
